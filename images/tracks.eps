%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 203.000000 97.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H2) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 203 97
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 203 97
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin
/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /t put
dup 34 /y put
dup 35 /u put
dup 36 /lslash put
dup 37 /o put
dup 38 /d put
dup 39 /w put
dup 40 /r put
dup 41 /z put
dup 42 /e put
dup 43 /n put
dup 44 /i put
dup 45 /a put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A002A0093007600A000AC00B800AB00C50000002BFE55001A042F002105BE002740292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB040
44591B21212045B0C05058B0C0441B2159592DB800312C2020456944B001602020457D691844B001602DB800322CB800312A2DB800332C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800342C4B535845441B2121592DB800352C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800362C2020456944B001602DB800372CB800362A212DB800382C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800392C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8003A2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8003B2C2020456944B001602020457D691844B001602DB8003C2CB8003B2A2DB8003D2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8003E2C4B535845441B2121592DB8003F2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800402C2020456944B001602DB800412CB800402A212DB800422C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800432C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800442C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800452C2020456944B001602020457D691844B001602DB800462CB800452A2DB800472C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800482C4B535845441B2121592DB800492C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8004A2C2020456944B001602DB8004B2CB8004A2A212DB8004C2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8004D2C2046B00425465258238A59204620






00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/a 1 def
/d 2 def
/e 3 def
/i 4 def
/n 5 def
/o 6 def
/r 7 def
/t 8 def
/u 9 def
/w 10 def
/y 11 def
/z 12 def
/lslash 13 def
/uni20BE 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1947 -985 2961 2297} readonly def
/UniqueID 4065484 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2829599C1DB40C921169FF26E104FB48CECC24574A8196DC855B668A0A207C675C2EFE5B6196F1E04171FBD8950D29EB960CF52BBBA197A69217C7582631DD2835A9C44AAB1770EC9ABADBBB2CDDC3E7FCBD5DD42A9B6D65C549B69AB24C4DF894F48AE1E49A51FD00B0968E9387142C4F3DA797CDD7E25D8F1D548F04B444ED32ED80267AC41FB5EE3F78772C5B9BC8B10254035486398B53B11FC505FD1B32A389F10CE59CFE0E7E0518E2FF79DCA4A5304CB6AA4F359BEACAFE6AE4AD432244EBEBA9B03DB3CCF5553D6C95AC951F703D7F15E231127F13C59C49AE8507DBB2EE64BAE9F0E647175F94F135B2791514906FE1902F14DDABF7EFC4A5AF3CEBECA28D3A536E6F50F966C309A9189CB555E848E734BD2E591E556EB9CEEC559B68E4085EED11FACB6E87935EDE1BE33F1B31DB8B24631242A377B242CF24A0E20B1F1D61B7E89A3D386B714DAD2A1E7A1A78BCAC82AB192D44FB460131B2F060D10BEDA3DE6805537F38C47013B151E0B74B85F72F0376159B738C4556A64801BF507979A431E9BAE701ECF2302FD998AD087B00ECB14B2A0EED59C727F8FE8D194DA878C6828C25A37645553144A0B392F21F638D403DB9D3FDC56EF80399DFA79A54E2DC9AF2D334C40843767AF6D9830D84EF1B018F13FF6B1014ADED01B86676DFD89DB3985C4AE99045D118967D65F41E8AC60B9648DA561093DBA45D724ABDEFE31FDE7A2986DB101E75C7FECF3362D4518AD664E2C1836A701BD31E3BDCD9E2EC7
63A97FF723533A5341538CA8C6E4D5922EB77A88786A89270215DA942613D027CB71BC7F4AEBF2E2BA96F97DAF46600D77BE2BE7341736FF4B51FDC5B2EC79D510AB4804EEBB750D38EF466539DA3D3F4E4F867E1C2B7031B244C1D716B1514C4CAB3A2EA2243F381F942C42D859F70B236E668434FC405F6CF040E409DE3D0BE36888804C27070EA66017E316A82DDDBD2DF5A6538EF35A003040167C4A746A426AE40E6A9556909DC84D1EE2846EA0BF4231A1A0151D88F0539B77087156077D35A1C980904AF2054FAD9A50CF2A2F483DA63265C3A0B9B5DED3496306EB970637D7391FF8B483176A109E54093D367605D17A256DA6CE6E1A455029D570F97F810D91C9F64BF39B1D656466E88D055AE72A7F3823CE0D815F7232C1302D308FAA3C2E42B919396BCCF430B5BE3571825C47C4E653251EE70CA011CD3DB3F3EAD4976AD52C6BEF059633545DE63DA465EA399B0DD28E2B77B060D8EDD55A019138DAEB1D7C1B97037895818CFDCA5BC80ACA7E5D9E7226BA5C74A224DAA4AC05CAE87ADE1FA6885C34C878122E707DB22535719D6DDEE34BB8DB65B1DC8AB0791533E07053F2A2F84DEE05C91AA08056C3904E9BAEA0AF0D7F27B9B69D8046EE9A07E019F3600C06BEED591CB5475CAD1A33A5F681B92DBD198ABFA7F5D8203BA4BA37EB33370B712E261758100A55CCD2D87A39A4E262E76F9E1A386321405C76501827D335D984C136AF25A084347733E7ED8BFC724AAC9CAF95C6D5897742EE60C12D3612004BBD0621989CFCA2BAA8CA74FB6B1066AD5E6A90C8F0A9BFC06FF8E7BBAD6FCD422471C3A3F26D750C1E9DF404037C32614C5C89920639757088598F1CC063855AAC77464AA5B009C2B07D1BCB63727AF8B4FD66DE45BC18A122918F7D2923B60477B511C65C7FF9816744993C2172E8DE6062FE79DDE01E9CF7EF98CFD786E9A2DE99D846B37B66121638C6B07412FD91AB6C99E6B96234E5707060CE2D4A46BEFC2AE73740E8CD69378AC287CA6B7205256072113FE05802021BCA6FF40E23D26B925CAD09DFBA080172FBFECF76BD1AC4C5948F0327C4B41FE1AA0B26DC3D0E4571524F910925991B155ABE974C3CEA402FE8249564E3BC95C4309E4C50911F863AA4381AF4E8B77B21ECEA5C149646D25DBEEE969A3769B3F3B4311F933D2D37213F4C140089A64F2CB19A80CB8504F8A869BC1D09DD03CD20EC9FF32C8720253422BE304B627571278C2DA5BBE2CBE460F2FC3FA06B25ABF1592F0F8D706092C8B8B3F9366490D99B1A7F477D442531C0AB0AB335D1E1B4D65728D8055B30D581234E26F0C2D976EBE8AE3BFC81133846FCDFD6F0E6FA45D32A76C0915BB6225725AC95560434B658D97AD0EF045384C904E2199FC6F4CDC0BD6809642E45381716F4125ABFFA71B1908C12A005569342EA7AE1F3A7
842865C71952B603E538213DAD60E6C6AB1F0CB5EABAE81F6415BDA68739E5F885EB65BA4EC81C2CB1149BD959E93AB64B5C22651B6E1FA4C6747AC5A17D5E45B0FC31830050AC7D8666D9AA0E0B1A8E229EAA5E1C498140E25FCA888450059B73386742D0A828BCEED1D5D6CE3C3FE59DD10406309528C23611FF7B0788C25BE7982E66716A15975D08C705482C126D236E73FA185ACF4ABDEE925C34CD1279402184B0354675B85712C43E92CEFF45447E0CE408DE55DA817A5B52891070D129A88D933BE0BC78783733D50035838BBACB8C836184F1881A7F02BD6E59BD226F2D40EA68606F9D0756864BC618D2579F07C359206820D5AD549F53BBA7F0FAF0E2220FA22EC851BC7A0B14318BDA062678C12E21D415FAE15C67C9D2E7BBAC16997176A68BA217E8CAD256A03A6EA4B686C9E291ADDD69DD8A5D724ECA459BA168EEA9AF022D6ED8C2EA36C89ABA0878DDAFCC66AF94B148CF5E769DD502715BCD1D222824FFD7449B2A57EC331DE6DAAC95B9A0ACA72FB46F7CEBE51583DCB0BB76AA470EE7A02486E2B2CE5F0A1BD7F08AC2C62B707011C393E1DC06CC5D9204E7E6C8A5B5A99061B56058EC0D6A8EDA067E15BD9AE4B54DC2497F5B462EEEC8739782DC0203926A87654006BCDA4BFF362360A803828D3807B14322E8659D4BE4B540FEEC0A9B59A8C5034431F385168C02E78F8FBC58EDA14181C780433B4E1A69F1E0867AB68483
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /M put
dup 34 /y put
dup 35 /space put
dup 36 /W put
dup 37 /a put
dup 38 /T put
dup 39 /h put
dup 40 /u put
dup 41 /n put
dup 42 /d put
dup 43 /e put
dup 44 /r put
dup 45 /s put
dup 46 /t put
dup 47 /c put
dup 48 /k put
dup 49 /one put
dup 50 /five put
dup 51 /two put
dup 52 /zero put
dup 53 /U put
dup 54 /w put
dup 55 /o put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






014D003D01F4001F013B0009022C004002F6001101F4000802E5003600000046004600F2011801A00238028202A802DE031803C4043604D4053C058E05C0060806A806D6077A07CC081C0856089E09400001000000190096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/five 5 def
/M 6 def
/T 7 def
/U 8 def
/W 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/h 14 def
/k 15 def
/n 16 def
/o 17 def
/r 18 def
/s 19 def
/t 20 def
/u 21 def
/w 22 def
/y 23 def
/uni20BE 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4445087 def
currentdict end
currentfile eexec


6083A5166C6AF98E8DF2D74F788D587AC5A72044B0D27B4DA23A24B80F0126844FA617A42E5819A95337A9ED8B5AFCEAE6C109B7A6CAEE95527CAFDFEF27D09AD62C00A75FDA5A17F7222BE6FB4696DCDB5F0C868BF2F34427164CE8C3B155A617AF43B0F062706897F55830CEFD08578C5C7E98B886122310D7E58D7715E15F4985C16C76FC653EB7490FB13EE71C46BFC191D2B14EF2193029A8E437835A947B01B797D81EFD963A0BB536BB3784B42BA5D071F026661AC20F8B237EBEDC017906916BD1C2FA3168911DE9BDD324F4BC2FF31BADAB31E21B84CECBB2B16CBB92A0CF654978E4CD9A0738A49626F1D862D7D7E1FC35D5EE2F706CAEEEB121EBC9EAC1B149D1112C29340A4D521A46A0E14B9BC91EC25BA8C47AF42CA82138C33AD10D6C08A1E22ED19C27E547092B710D6B2A30F56EF53C8A48658F5583FBDB721A6C236EA8AE429852D349AC70441BB8AF0E1B0A5171629BFD0F3F0D83473D1D3CE3562A182D47EF2130CE4D10CC759093D85E60C0D6E61DE5EAA65B2F8B85D6DA3EC464CCCBA111013AE8ED255A068948EBDBD785CF01BE08830A19B2B3FC74CDFDCD197F447D8A0E2396FC14DA21C208B0999EFA9F3CFF73A23989F2BE50A4D76724D4C7743F1FD98D7C4F31AC27F6C5B350EF778C3C665012B33FB61561D9E589C0DB0489039DBAED81D3188A8AE776852D202780DFB603E313B86697B767587E4450B01B3A7A35EE1429405C61DFF9D55F85B5DE479F5072ABC72AB897E81277C795B3C5A291D87A7D84355AD12008A21CF3A59802ADDA6D72270FC684EDF913EE8C14583C4324F5D0A7D344FED1AF88BF7CBE01F2F8B1CAB26D81C73DF7BB7577F80A02A0FB4F7ABBE10371A922A3F3EE36FDF965A6DA77359BFBB5ACE3E07372D413FAC50C211E20A3F9D80455FE71CDF42608245DC0259503DFB07BF95130C0D77EAA4298B2B66C5A1209A9EA14EB1FB8ADE307A4D9EEA5B272C51D287C5B266C982E3E6990D4394AB0B719890F2D3686CF410AA468B1F88F44B2BFEBB9423418E60114724F91A23880D221352A73FE6723595B3BBB167A40853DB8AE02237F2D1D3D3B84487068395DFFFBBA75055F95E30730EC345BDE5102BBE46E1F0DF15A4B11443868A1805B60BAD1A67F38AA9473A252204E01AF284A1DAB538F605CD74B4FF2F80840FA57D49175F98632B54E5B25114A2CA97D728114D71FA34D7A491B900C34D82BE470436436F00D784F959E7E81B43EBAF3C8562E8252B4B39AA37A390E7BED0FD6BDD19C2AD73560C9342A573137606E6840BB73D7DBCFD9C02CE4842EB3B4ED7D398511FD7BD9115FEBFEE942EEDD04EDB9668581EE4355F52A47FE43965188CACC8563E8C585E8AF079CC4F859BCA39D6698095CFAA21DED62135F1100CF3570AE73A5A068ADE2C9381136F7136EF1C5B55E1A7E
F0D9E690E33ADE23BD20E041D90698FAE43E6AD56E09811C0D05AEEA6CBFBA1A99BC6B64DF6FA40C142791909469BA9905E34754DD0A0BB8A8DF8E64F7668A14D0D368832E2279848704E3191F8708A64500A4D7376D4C90E1F9CC581CD11D281E024E6FBA167CCC0769ACFF7295244CC22B4638FE64B7E586D08AB48E04571A3FA29E23DD716E3A275DE4FC5524B244E19FA0932591EF6CCF11C323480C9E41C4283080A2B54CB75F7D321397C7CEF532810B70B875EB680024ABEA3FFC5CF02AD50002D8E55B214E204581D0480C028C9EEFA9F607F4EDD60DB96756C9E534763E6678264B27E69A1A6459F2375C9133E419C3B45219B4E078E60B4B45027AB8CE576797DCC617E48CFD30F26E886B5B33922A182674E914E0C9CD974A5AA02DFA3EC5BC055810248423053FE4537A3D43A9665625A5F3421FE6BD2BDB5148DEA6CEC89153F5F976000347418CD24DB5D6A75F818AA4C34CBA29BC6977376456F94F51C9807545CB654B33F64232240AE3A109BB67DAF3D1F9FF73278FC43A9FA5F78CCC68FAC252B44072863A4395A42203820728F3AC8F3C1531E6C4296CBCAE62B80DCD484E6D19BF9C3356FE323F77B9DA4B91739A91F38BB13B69E18368148FF37C18DA96B58ECA5097C436C71E4FCE8DB7E9CAC273BFD746725774E31ABD87F64BE47D17188ED3E8759F5D8FE2B7B2EE677829C203B279BE580A4715AB4E83E2005ABF16CD2A9D1B05F83B6A33FB25C462397F3D54F7160C70BCE1130CC871089ED7C637085DDE290CDD9B1DF399D586754A0FAB841813F3F0C5B016EDDB2C37FF8F839413E85785B6D07D4CA342A3544A9BA805376EB37ABA041E0E53ECD5A2FBF5D1026D7820F9DF1B412921FC2875D7E55E50B565E33479260A8EF92FB063D90D152DD073AB1321F9757F541B116907F97E4AB43B90AAE6A5E4C577DD7EDF1433C96D919AFBE664DC062F57C845D4815CC37D6206B41DBA592ABC2DD70CE35B240479330DAECDC512355FBA18014C49972E5B578231A3EC57918951F1944B2F9CE88C435D9139AE0BDDB98A4D9CF830960D5D57AB494400C63467A49DEA1EBF1D121C7EAEBAC7091447C5D3990A21F9E449535BC7152747DFCDAF10F3C661AA3AB32D79342C8DA0916AC98E9B458414480654DBC015005D459C2BFFC7536206242C432C044A3E02F5001B8BC62BBBA441D308FEAB2761C44F2B2CD404E54DB2B0F2F461678FE81B7A4DDF91547117E4AFD971EE78076A36E2C9BF3859278FBC9152F7660FD8853BDDB5D31F95453C76709850B627E177BD90BEA1AB8157F8865C2519F938845103AAF547144373D09EB760C89856BECBAE9633A2DF0556A8E68387FC19307FFED74629585736EEC9F48C01AF430D193D9246890D8F110FD81E3C09D941889E6F4722EF48052129DDFA40D9C1C731B1E447AA1C0C
913BE781D843DD3811306F495B80DF2C94F5D40BDB5EDC15E7C119E0B7C5D437ECBF191B5FEC0D0CDD2607C355D5488487A0E73C2EE47865184F130FD0D74D60A2E955F241C489CB53184F1A7AA4EEF6DFF112D73FBE0DFAE1721D461789F772BF0A6A38B95D3BB1567578AC0B1BAC2A104584E4E581AEE0A3A6414379C42723747EA270B6BE583E592357BCE5ED4F42CCAA22019CF8D3E1F11C6F6DF289FF761BB495D2967BCEDDA4DA8B894399C52A806F82C2D158A7E2A5A6A4381B78AAD36EC7E3C1A5E9A095E72CE7B84CEE3660788C2F9BAA6390C1D9A62C7CD23FFB56D3DFDB7A981B1EC4DE64CDE75F6EF1FFF9038DF4B02466D44C3CFC2E8C4E87D1A26751148B116DBAE67A54F31DB2599E90D2E7EAB7D85838FC8F4496DB1E7A63EFB4C1597D3357FA974861FF014765D230C54D1537ECD23710244F8E10BDB8A89485E157D3B396FA8E67FD31F5287D37F42DBFDDA3DD814CD3DD8700D83D0C2EB104DB6000E7EAE3087A10231CE3DDE33149485F4D98E0227A0E76C3CF7CB7798531D1D0A573621CF9780F8D8EEB501032BA03AD0B85FCD9054396682456565FBAA8420CEC3B5BC8184E4A53030C1FE04A818E4AF28F4D0F899869793E4A1D24FF7727D9917733E16FAAFD10B5B078479C4D53DD7E7CD34EE68E46F809EF137D8FCDCDA150CF08122CC9CB6E5609BFE1599305204CF85034E53F28CFD72653928D9EF25609C1AFC08BF61760789D484BD43B5DDD06290DD73129E4A4673AAA96F3B2C5A17A3149EA5917A2A9112C13E3B1F7F7583C0269F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 203 97 rc
0 97 m
203 97 l
203 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-14 109 m
275 109 l
275 -72 l
-14 -72 l
h
-14 109 m
f
0.5625 w
1 J
1 j
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
21.375 46.125 m
137.16455 46.125 l
137.16455 66.75 l
21.375 66.75 l
h
21.375 46.125 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
26.375 60.4375 m
(!"!#$)[ 3.333984 6.000000 3.333984 6.673828 0.000000 ] xS
/Cs2 SC
195 0 0 21 7 42 cm
BI
/Width 585
/Height 63
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
riLa'KS"c,JV&H)JV&H)JV*9@ri,nfJcD5>JcC<$JcDVIrhTOHJ`;IEJ`;7?J`;7?J`;7?nDaG_rkX0b
R/V[9Jc:6"VZ-Rjre5q&L]2l(Jc:6"Jc:6"Jc>0<rmLe^Jc;&9Jc:6"Jc;PGrhTOIJc1B&Jc1/uJc1/u
Jc1/upAOmfrmLe]Jc1u7Jc1/uJc2JErhTOIJc1B&Jc1/uJc1/uJc1/upAOmfrmLe]Jc1u7Jc1/uJc2JE
rhTOIJc1B&Jc1/uJc1/uJc1/upAOmfrmLe]Jc1u7Jc1/uJc2JErhTOIJc1B&Jc1/uJc1/uJc1/unGW@7
rkO*`R/MU7Jc1/uVZ$Lire5q%L])f&Jc1/uJc1/uJc5*:rmLe]Jc1u7Jc1/uJc2JErhTOIJc1B&Jc1/u
Jc1/uJc1/unGW@7rkO*`R/MU7Jc1/uVZ$Lire5q$L\u`$Jc()sJc()sJc,6>qu-NBrkO*_R/DO5Jc()s
VYpFhre5q$L\u`$Jc()sJc()sJc,6>qu-NBrkO*_R/DO5Jc()sVYpFhre5q$L\u`$Jc()sJc()sJc,6>
qu-NBrkO*_R/DO5Jc()sVYpFhre5q#L\lZ"Jbt#qJbt#qJc#0<qu$H@rkF$]R/;I3Jbt#qYP\+mrhTOI
Jbt6"Jbt#qJbt#qJbt#qpA=abrmC_[Jbti3Jbt#qJbuYJq#(,ere5q#L\lZ"Jbt#qJbt#qJc#0<qu$H@
rkF$]R/;I3Jbt#qYP\+mrhTOIJbt6"Jbt#qJbt#qJbt#qpA=abrmC_[Jbti3Jbt#qJbu>ArhTOIJbt6"
Jbt#qJbt#qJbt#qpA=abrmC_[Jbti3Jbt#qJbu>ArhTOIJbu5>rm:PVrmC95Jbt#qJbt#qJbt#qpA=ab
rmC_[Jbti3Jbt#qJbu>ArhTOIJbl/<r\F?Nr\j<CJbjroJbjroJbjropA4[`rm:YZJbkc1JbjroJblSH
q"t&dre8brrnmL!rmJIUrnmL!rmJ7Or\F?Nr\j<CJbjroJbjroJbjropA4[`rm:YZJbkc1JbjroJblSH
q"t&dre8brrjqk)rh$k"rjqk)rh$Xqr\F?Nr\j<CJbjroJbjroJbjropA4[`rm:YZJbkc1JbjroJblSH
q"t&dre8bqrjhe(rh$k!rjhe(rh$Xpr\=9Mr\j<BJbalmJbalmJbalmpA+U^rm:YYJbb]/JbalmJbcMF
q"jucre8bqrjhe(rh$k!rjhe(rh$Xpr\=9Mr\j<BJbalmJbalmJbalmpA+U^rm:YYJbb]/JbalmJbcMF
q"jucre8bqrjhe(rh$k!rjhe(rh$Xpr\=9Mr\j<BJbalmJbalmJbalmpA+U^rm:YYJbb]/JbalmJbcMF
q"jucre8tsrlY5Nre1%Hrc.hGroF(%pppCgl1P&ApppCMrlY5Nre1%Hrc.hGroEtLrk\KBrmC!'rkSEA
rmpc8r\=9Mr\a6=Jb=TeJb=TeJb=Tep@\=Wrm(MUJb>E'Jb=TeJb?5>q"Oc`re8tsr\3R:rgWmWp]1;U
l1P%Cp]1:mr\3R:rgWfXrX&H%r^uGJrW`6"ra5?kr\=9Mr\a6=Jb=TeJb=TeJb=Tep@\=Wrm(MUJb>E'
Jb=TeJb?5>q"Oc`re8tsr\3R:rgWnWp]1:Yl1P$Gp]1;or\3R:rgWfXrX&H%r^uGJrW`6"ra5?kr\=9M
r\a]Jrp'KNqXoF4Jb=TeJb=TeJbAa0qtL*8rk*gTR.Z%'Jb=TeYP%\brhTOIfCJoNr]:$)p]1:9q`=_`
roX1eqZ-Tsrnm28ro3n\qZ-U.rpB\pr]:$)p]1:9q`=_`qss^mqZ-Ufl14fXqZ-V$p%&)9qZ-UPrh]T5
rY55"Jb"B_Jb"B_Jb"B_p@A+QrlkARJb#3!Jb"B_Jb$#8q"4Q]re8bjrj;G#rgNNNr`8dorfZa@rg<H\
rabfprj;G#rgNEKrX&H%r^uGGrW`6"ra#3fr\3mCrY55"Jb"B_Jb"B_Jb"B_p@A+QrlkARJb#3!Jb"B_
Jb$#8q"4Q]re8bjrj;G#rgNNNriPqqr^-)Er^ceark%srrj;G#rgNEKrX&H%r^uGGrW`6"ra#3fr\4!F
rW`@MqXT4.Jb"B_Jb"B_Jb&O*qt0m3rk!aPR.>h!Jb"B_YO_J\rhTOIdI."=p]1;\p$VhErY>;1rWE/U
p$Vh;rWW0!rZLn%riu4urg<9ErX&H%r^c;ArW`6"r`o6drj_q?p]1:Yrlb'(JaS*WJaS*WJaS*Wp?qhJ
rlY5NJaSonJaS*WJaT`0q!e9Yre8bfriu4urg<9Erb)!+rfZsBrg3B[rcIi$riu4urg<9ErX&H%r^c;A
rW`6"r`oHjrnm]_o`4tDna:trJaS*WJaS*WJaW7"qsj[.rjdUJR-oOnJaS*WYO;2TrhTOIdI."=p]1;\
o'ZLjp]1:]p$VfLp]1<9p$Vgap]1;\o'ZJ`qZ-Udl0eNTqZ-V#rpKb/nc8YFna:trJaS*WJaS*WJaW7"
qsj[.rjdUJR-oOnJaS*WYO;2TrhTOHdH^_6p]1;Yn*9lsqZ-TurnI>8rn[PXqZ-ULo'64Wp]1;Yo'62\
qZ-Ucl0A6PqZ-V!rp'IorW)p?p]1:Ln`k\jJa.gOJa.gOJa2soqsOI)rjRIDR-K7fJa.gOYNkoMrhTOH
dH^_6p]1;Yn*9mrp]1;Wqs+0Hp]1;Io'64Wp]1;Yo'62\qZ-Ucm-=T6p]1:srp'J&rcnG&r\"'Jr\O*0
Ja.gOJa.gOJa.gOp?MPCrlG)JJa/WfJa.gOJa0H(q!J'Vre/\ariZ"rrfus;rlY!9r^H_Lr^cndrW<)L
o'64Wp]1;Yo'62\qZ-Ucm-=T(p]1:srp'LGqs+/5qZ-UOn`k\jJa.gOJa.gOJa2soqsOI)rjRIDR-K7f
Ja.gOYNkoMrhTOHdH:G/p]1;Wm,n:(qZ-U"rn7;)rWi<#r]or7ri>eorfcp8rX&H%r^Q8:rk\@0r`SpV
r\"'Jr\F$+J`_OGJ`_OGJ`_OGp?)8<rl4rFJ``?^J`_OGJ`a/uq!.jSre/\]ri>eorfc^2reL7Krfd>G
p]1;Wn)jVMp]1;Wo&foXqZ-UUm,n;)p]1:rp#c6+qZ-UNn`GDbJ`_OGJ`_OGJ`c[gqs47$rj@=>R-&t^
J`_OGYNGWFrhTOHdH:G/p]1;Wm,n;srWN)ur^d#[qZ-U'rnQu)ri>eorfcp8rY,//rX\J[roF&:p]1:r
p#c6+qZ-UNn`GDbJ`_OGJ`_OGJ`c[gqs47$rj@=>R-&t^J`_OGYNGWFrhTOHdGk/(p]1;Ll/M\2mf<>e
m,J#Cp]1;Lo&BWsp]1<'o&BXbo`4tmp#>s&qZ-UMn`#,ZJ`;7?J`;7?J`?C_qrn$trj.18R,W\VJ`;7?
YN#??rhTOHdGk/;p]1:Fro!/&rg*!Qri5>Erk%q*r[n--p#>sLp]1:3rk\Kkrkn_]nc8Yjp#>s&qZ-UM
n`#,ZJ`;7?J`;7?J`?C_qrn$trj.18R,W\VJ`;7?YN#??rhTOHdGk/arY5,-rW`?=rh/iArn@>\o`4t4
ro*5'ro*hjp]19trYYX-qr7UNnc8P+li@#dp#>s&qZ-UMn`#,ZJ`;7?J`;7?J`?C_qrn$trj.18R,W\V
J`;7?YN#??rhTOHcJJOrnc8ZJn)"%Do`4u3k2-)5nc8ZJptl!ojoGBdr\43Lr`8^Kr[dpHr\3m!J_kt7
J_kt7J_kt7p>5].rkeZ>J_ldNJ_kt7J_mTepuD@Lre/SRrjr(Ro`4uMn)"&?p]19prl4*Wrjr(Ro`4uM
p"o[trXA>trYPQjrnRK3qZ-V"p"o[%qZ-UQn_SiRJ_kt7J_kt7J_p+WqrRgoriq%2R,3DNJ_kt7YMT'7
rhTOHbMN6QrkJH+rhBD%rnHnurlt3<r^,Q"rnIFerh9=crj_s^o%sB%rk/5mrc%jkri,nJa52C(J_kt7
J_kt7J_p+WqrRgoriq%2R,3DNJ_kt7YMT'7rhTOHVqV,rp]1;_J_KVIJ_G\/J_G\/J_G\/p=fE'rkSN:
J_HLFJ_G\/J_I<]pu).Ire.<*rn78nqZ-U9rn2kVnCiHIJ_G\/J_G\/J_KhOqr7Ujri^n,R+d,FJ_G\/
YM/d0rhTOHWnRH0p]1;@J_KMFJ_G\/J_G\/J_G\/p=fE'rkSN:J_HLFJ_G\/J_I<]pu).Ire.`2rkn^m
r`f@jrWN)urXf(RJ_'5>J_#D'J_#D'J_#D'p=B,urkAB6J_$4>J_#D'J_%$UptbqFre.`2rjhItrcj"F
lILO;J_#D'J_#D'J_'PGqqqCeriLb&R+?i>J_#D'YL`L)rhTOH[atGgnc8YnrmHAKlILO;J_#D'J_#D'
J_'PGqqqCeriLb&R+?i>J_#D'YL`L)rhTOH[aP/nr_re[r^Qm$rgJDdjO/V-J^T+tJ^T+tJ^X8?qqM+^
ri:UuR*pQ6J^T+tYL<4"rhTOHJ^T>%J^T+tJ^T+tJ^T+tp<rimrk&01J^Tq6J^T+tJ^UaMptG_Cre,jN
LXLb%J^T+tJ^T+tJ^X8?qqM+^ri:UuR*pQ6J^T+tYL<4"rhTOHJ^0%rJ^/hlJ^/hlJ^/hlp<NQfrji$-
J^0Y.J^/hlJ^1IEpt#G?re,jJLX(IrJ^/hlJ^/hlJ^3u7qq1nYri(IoR*L9.J^/hlYKlporhTOHJ^0%r
J^/hlJ^/hlJ^/hlp<NQfrji$-J^0Y.J^/hlJ^1IEpt#G?re,jGLWb7lJ]iVfJ]iVfJ]mc1qpk\Urhk=j
R*1'(J]iVfYKQ^irhTOHJ]ihlJ]iVfJ]iVfJ]iVfp<3?`rj_s*J]jG(J]iVfJ]k7?ps]5<re,jGLWb7l
J]iVfJ]iVfJ]mc1qpk\Urhk=jR*1'(J]iVfYKQ^irhTOHJ_l1=J_kt7J_kt7J_kt7p>5].rkeZ%rlp#N
S)/_QJ_kt7YMT'8rhTOGJZ":$JZ"'sJZ"'sJZ"'sp8@eerg`tTrlp#NS)/_QJ_kt7YMT'8rlBYBKS"c,
JV&H)JV&H)JV*9@rfR3CJbPZ.JbO`iJbQABq"T@
~> %APLeod
EI
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
137.16455 46.125 m
216 46.125 l
216 66.75 l
137.16455 66.75 l
h
137.16455 46.125 m
S
/Cs1 SC
0 sc
0 i
142.16455 60.4375 m
(%&!'%\(\)*+,-)[ 6.673828 6.673828 3.333984 8.666016 6.673828 3.996094 6.000000 6.673828 6.673828 2.666016 0.000000 ] xS
/Cs2 SC
0.95328563 0.95330793 0.95329589 sc
CM
7.375 21.625 m
123.16456 21.625 l
123.16456 1 l
7.375 1 l
h
7.375 21.625 m
f
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
21.375 87.375 m
137.16455 87.375 l
137.16455 108 l
21.375 108 l
h
21.375 87.375 m
S
/Cs1 SC
0 sc
0 i
/F2.1[ 12 0 0 -12 0 0]sf
26.375 101.5195 m
(!"#$%")[ 10.452000 6.000000 3.336000 10.668000 6.444000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
7.375 42.25 m
123.16456 42.25 l
123.16456 21.625 l
7.375 21.625 l
h
7.375 42.25 m
f
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
21.375 66.75 m
137.16455 66.75 l
137.16455 87.375 l
21.375 87.375 l
h
21.375 66.75 m
S
/Cs1 SC
0 sc
0 i
26.375 80.894501 m
(&'\(\)*+,-.,\(/0)[ 6.888000 6.672000 6.672000 6.672000 7.116000 6.444000 3.996000 6.000000 3.780000 3.996000 6.672000 6.444000 0.000000 ] xS
/Cs2 SC
0.95328563 0.95330793 0.95329589 sc
CM
123.16456 21.625 m
202 21.625 l
202 1 l
123.16456 1 l
h
123.16456 21.625 m
f
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
137.16455 87.375 m
216 87.375 l
216 108 l
137.16455 108 l
h
137.16455 87.375 m
S
/Cs1 SC
0 sc
0 i
142.16455 101.5195 m
(12)[ 6.672000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
123.16456 42.25 m
202 42.25 l
202 21.625 l
123.16456 21.625 l
h
123.16456 42.25 m
f
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
137.16455 66.75 m
216 66.75 l
216 87.375 l
137.16455 87.375 l
h
137.16455 66.75 m
S
/Cs1 SC
0 sc
0 i
142.16455 80.894501 m
(34)[ 6.672000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
19.446499 32 m
(5.67,")[ 11.552000 5.040000 12.128000 9.184000 5.328000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
